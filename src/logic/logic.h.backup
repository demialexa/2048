#ifndef _2048_LOGIC_LOGIC_H_
#define _2048_LOGIC_LOGIC_H_

#include "display/display.h"

#include <cstdint>
#include <vector>

class Logic {
 public:
  Logic(uint32_t length);

  uint32_t GetLength() const {
    return length_;
  }

  Tiles GetTile(uint32_t i, uint32_t j) const {
    return matrix_[i][j];
  }

  void NewTile();
  void MoveLeft();
  void MoveRight();
  void MoveUp();
  void MoveDown();
  bool IsGameOver() const {
    return game_over_;
  }
  int32_t IsSuccess() const {
    return success_;
  }

 private:
  void Transpose();
  void MergeLeft(std::vector<Tiles>& row);
  void ShiftLeft(std::vector<Tiles>& row);
  void MergeRight(std::vector<Tiles>& row);
  void ShiftRight(std::vector<Tiles>& row);

  uint32_t length_;
  std::vector<std::vector<Tiles>> matrix_;
  uint32_t free_;
  bool game_over_;
  bool success_; 
};

#endif
